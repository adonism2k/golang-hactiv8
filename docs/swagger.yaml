basePath: /
definitions:
  CreateCommentRequest:
    properties:
      message:
        maxLength: 255
        minLength: 3
        type: string
      photo_id:
        minimum: 1
        type: integer
    required:
    - message
    - photo_id
    type: object
  CreateCommentResponse:
    properties:
      create_at:
        example: "2022-10-10T11:52:28.431369Z"
        type: string
      id:
        example: 1
        type: integer
      message:
        example: This is a comment
        type: string
      photo_id:
        example: 1
        type: integer
      user_id:
        example: 1
        type: integer
    type: object
  CreatePhotoResponse:
    properties:
      caption:
        example: my first photo
        type: string
      created_at:
        example: "2022-10-10T11:52:28.431369Z"
        type: string
      id:
        example: 1
        type: integer
      photo_url:
        example: https://images.unsplash.com
        type: string
      title:
        example: First Photo
        type: string
    type: object
  CreateSocialMediaResponse:
    properties:
      created_at:
        example: "2022-10-10T11:52:28.431369Z"
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Instagram
        type: string
      url:
        example: https://instagram.com
        type: string
      user_id:
        example: 1
        type: integer
    type: object
  DeleteResponse:
    description: DeleteResponse Model
    properties:
      message:
        example: your account has been successfully deleted
        type: string
    type: object
  LoginRequest:
    properties:
      email:
        example: abdianrizky11@gmail.com
        maxLength: 32
        minLength: 6
        type: string
      password:
        example: bcrypt hashed password
        maxLength: 32
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  LoginResponse:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        type: string
    type: object
  PhotoRequest:
    description: PhotoRequest Model
    properties:
      caption:
        example: my first photo
        type: string
      photo_url:
        example: https://images.unsplash.com
        type: string
      title:
        example: First Photo
        type: string
    required:
    - photo_url
    - title
    type: object
  PhotoResponse:
    description: PhotoResponse Model
    properties:
      caption:
        example: my first photo
        type: string
      created_at:
        example: 2017-07-22'T'16:28:55.444
        type: string
      id:
        example: 1
        type: integer
      photo_url:
        example: https://images.unsplash.com
        type: string
      title:
        example: First Photo
        type: string
      updated_at:
        example: 2017-07-22'T'16:28:55.444
        type: string
      user:
        $ref: '#/definitions/User'
      user_id:
        example: 1
        type: integer
    type: object
  RegisterRequest:
    properties:
      age:
        example: 18
        minimum: 8
        type: integer
      email:
        example: abdianrizky11@gmail.com
        type: string
      password:
        example: bcrypt hashed password
        maxLength: 32
        minLength: 6
        type: string
      username:
        example: adnsm
        type: string
    required:
    - age
    - email
    - password
    - username
    type: object
  RegisterResponse:
    properties:
      age:
        example: 18
        type: integer
      email:
        example: abdianrizky11@gmail.com
        type: string
      id:
        example: 1
        type: integer
      username:
        example: adnsm
        type: string
    type: object
  Social:
    description: Social Media Model
    properties:
      created_at:
        example: 2017-07-22'T'16:28:55.444
        type: string
      id:
        example: 1
        type: integer
      name:
        example: Facebook
        type: string
      social_media_url:
        example: https://images.unsplash.com
        type: string
      updated_at:
        example: 2017-07-22'T'16:28:55.444
        type: string
      user:
        $ref: '#/definitions/User'
      user_id:
        example: 1
        type: integer
    type: object
  SocialMediaRequest:
    description: Social Media Request Model
    properties:
      name:
        example: Facebook
        type: string
      social_media_url:
        example: https://images.unsplash.com
        type: string
    required:
    - name
    - social_media_url
    type: object
  UpdateCommentRequest:
    properties:
      message:
        type: string
    required:
    - message
    type: object
  UpdateCommentResponse:
    properties:
      id:
        example: 1
        type: integer
      message:
        example: This is a comment
        type: string
      photo_id:
        example: 1
        type: integer
      updated_at:
        example: "2022-10-10T11:52:28.431369Z"
        type: string
      user_id:
        example: 1
        type: integer
    type: object
  UpdatePhotoResponse:
    properties:
      caption:
        example: my first photo
        type: string
      id:
        example: 1
        type: integer
      photo_url:
        example: https://images.unsplash.com
        type: string
      title:
        example: First Photo
        type: string
      updated_at:
        example: "2022-10-10T11:52:28.431369Z"
        type: string
    type: object
  UpdateSocialMediaResponse:
    properties:
      id:
        example: 1
        type: integer
      name:
        example: Instagram
        type: string
      social_media_url:
        example: https://instagram.com
        type: string
      updated_at:
        example: "2022-10-10T11:52:28.431369Z"
        type: string
      user_id:
        example: 1
        type: integer
    type: object
  UpdateUserRequest:
    properties:
      email:
        example: abdianrizky11@gmail.com
        maxLength: 32
        minLength: 6
        type: string
      username:
        example: adnsm
        type: string
    required:
    - email
    - username
    type: object
  UpdateUserResponse:
    properties:
      age:
        example: 18
        type: integer
      email:
        example: abdianrizky11@gmail.com
        type: string
      id:
        example: 1
        type: integer
      updated_at:
        example: "2022-10-10T11:52:28.431369Z"
        type: string
      username:
        example: adnsm
        type: string
    type: object
  User:
    description: User Model
    properties:
      email:
        example: admin@localhost
        type: string
      id:
        example: 1
        type: integer
      username:
        example: admin
        type: string
    type: object
  model.Comment:
    properties:
      created_at:
        example: 2017-07-22'T'16:28:55.444
        type: string
      id:
        example: 1
        type: integer
      message:
        example: This is a comment
        type: string
      photo:
        $ref: '#/definitions/PhotoResponse'
      photo_id:
        example: 1
        type: integer
      updated_at:
        example: 2017-07-22'T'16:28:55.444
        type: string
      user:
        $ref: '#/definitions/User'
      user_id:
        example: 1
        type: integer
    type: object
host: localhost:8000
info:
  contact:
    email: dev.abdianrizky@gmail.com
    name: Abdian Rizky
    url: https://linktr.ee/adonism2k
  description: Ini adalah dokumentasi API Contract untuk tugas Final Project Hactiv8.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Final Project API
  version: "1.0"
paths:
  /comments/:
    get:
      consumes:
      - application/json
      description: Get the current Comments data
      parameters:
      - description: Authorization
        in: header
        name: auth
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/model.Comment'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get All Comments
      tags:
      - Comment
    post:
      consumes:
      - application/json
      description: Create a Comment
      parameters:
      - description: Authorization
        in: header
        name: auth
        required: true
        type: string
      - description: Create Comment Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/CreateCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/CreateCommentResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Comment
      tags:
      - Comment
  /comments/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Comment
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/DeleteResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Comment
      tags:
      - Comment
    put:
      consumes:
      - application/json
      description: Update the current Comment data
      parameters:
      - description: Authorization
        in: header
        name: auth
        required: true
        type: string
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Comment Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdateCommentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/UpdateCommentResponse'
      security:
      - ApiKeyAuth: []
      summary: Update Comment
      tags:
      - Comment
  /photos/:
    get:
      consumes:
      - application/json
      description: Get All Photos
      parameters:
      - description: Authorization
        in: header
        name: auth
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/PhotoResponse'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get All Photos
      tags:
      - Photo
    post:
      consumes:
      - application/json
      description: Create a Photo
      parameters:
      - description: Authorization
        in: header
        name: auth
        required: true
        type: string
      - description: Create Photo Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/PhotoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/CreatePhotoResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Photo
      tags:
      - Photo
  /photos/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a photo
      parameters:
      - description: Photo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/DeleteResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Photo
      tags:
      - Photo
    put:
      consumes:
      - application/json
      description: Update the current Photo data
      parameters:
      - description: Authorization
        in: header
        name: auth
        required: true
        type: string
      - description: Photo ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Photo Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/PhotoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/UpdatePhotoResponse'
      security:
      - ApiKeyAuth: []
      summary: Update Photo
      tags:
      - Photo
  /socialmedias/:
    get:
      consumes:
      - application/json
      description: Get the current Social Media data
      parameters:
      - description: Authorization
        in: header
        name: auth
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            items:
              $ref: '#/definitions/Social'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get All Social Media
      tags:
      - Social Media
    post:
      consumes:
      - application/json
      description: Create a Social Media
      parameters:
      - description: Authorization
        in: header
        name: auth
        required: true
        type: string
      - description: Create Social Media Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/SocialMediaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/CreateSocialMediaResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Social Media
      tags:
      - Social Media
  /socialmedias/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Social Media
      parameters:
      - description: Social Media ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/DeleteResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Social Media
      tags:
      - Social Media
    put:
      consumes:
      - application/json
      description: Update the current Social Media data
      parameters:
      - description: Authorization
        in: header
        name: auth
        required: true
        type: string
      - description: Social Media ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update Social Media Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/SocialMediaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/UpdateSocialMediaResponse'
      security:
      - ApiKeyAuth: []
      summary: Update Social Media
      tags:
      - Social Media
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete the current user account
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/DeleteResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete User
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update the current user data
      parameters:
      - description: Authorization
        in: header
        name: auth
        required: true
        type: string
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update User Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/UpdateUserResponse'
      security:
      - ApiKeyAuth: []
      summary: Update User
      tags:
      - User
  /users/login:
    post:
      consumes:
      - application/json
      description: Authenticates user and returns JWT token
      parameters:
      - description: Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/LoginResponse'
      summary: Login
      tags:
      - User
  /users/register:
    post:
      consumes:
      - application/json
      description: Authenticates user and returns JWT token
      parameters:
      - description: Register Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/RegisterResponse'
      summary: Register
      tags:
      - User
securityDefinitions:
  "":
    description: Bearer Token
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
