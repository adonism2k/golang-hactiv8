// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Abdian Rizky",
            "url": "https://linktr.ee/adonism2k",
            "email": "dev.abdianrizky@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/orders": {
            "get": {
                "description": "Fetch all orders and all of its items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Get All Orders",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/OrderResponse"
                                            }
                                        },
                                        "error": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        },
                                        "error": {
                                            "$ref": "#/definitions/JSONError"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new order and its items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Create New Order",
                "parameters": [
                    {
                        "description": "Order Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/OrderResponse"
                                        },
                                        "error": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        },
                                        "error": {
                                            "$ref": "#/definitions/JSONError"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/orders/{id}": {
            "put": {
                "description": "Update an order and its items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Update Order",
                "parameters": [
                    {
                        "description": "Order Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrderRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/OrderResponse"
                                        },
                                        "error": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        },
                                        "error": {
                                            "$ref": "#/definitions/JSONError"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an order and its items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "Delete Order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/JSONResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        },
                                        "error": {
                                            "$ref": "#/definitions/JSONError"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ItemResponse": {
            "description": "Item Model",
            "type": "object",
            "properties": {
                "code": {
                    "description": "Item Code",
                    "type": "string",
                    "example": "PD-001"
                },
                "description": {
                    "description": "Item Description",
                    "type": "string",
                    "example": "Product 1"
                },
                "id": {
                    "description": "Item ID",
                    "type": "integer",
                    "example": 1
                },
                "order_id": {
                    "description": "Order ID",
                    "type": "integer",
                    "example": 1
                },
                "quantity": {
                    "description": "Quantity",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "JSONError": {
            "description": "JSONError is a generic JSON error response",
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code is an integer value containing the HTTP status code of the error",
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "description": "Message is a string value containing the error message",
                    "type": "string",
                    "example": "Error message"
                }
            }
        },
        "JSONResult": {
            "description": "JSONResult is a generic JSON response",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data is an interface{} value containing the data returned by the request"
                },
                "error": {
                    "description": "Error is an JSONError containing information about the error"
                },
                "message": {
                    "description": "Message is a string value containing a message about the request",
                    "type": "string",
                    "example": "Response message"
                },
                "success": {
                    "description": "Success is a boolean value indicating whether the request was successful or not",
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "OrderRequest": {
            "description": "OrderRequest Model",
            "type": "object",
            "properties": {
                "customer_name": {
                    "description": "Customer Name",
                    "type": "string",
                    "example": "John Doe"
                },
                "items": {
                    "description": "Items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ItemResponse"
                    }
                }
            }
        },
        "OrderResponse": {
            "description": "Order Model",
            "type": "object",
            "properties": {
                "customer_name": {
                    "description": "Customer Name",
                    "type": "string",
                    "example": "John Doe"
                },
                "id": {
                    "description": "Order ID",
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "description": "Items",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ItemResponse"
                    }
                },
                "ordered_at": {
                    "description": "Ordered At",
                    "type": "string",
                    "example": "2022-10-10T11:52:28.431369Z"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Assignment 2 API",
	Description:      "Ini adalah dokumentasi API Contract untuk tugas assignment 2 Hactiv8.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
